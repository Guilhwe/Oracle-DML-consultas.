Al usuario la nomenclatura de las tablas no le han gustado. Cambie en la tabla de DEPARTAMENTO  el nombre del campo ciudad_departamento a ciudad.
ALTER TABLE DEPARTAMENTO
RENAME COLUMN CIUDAD_DEPARTAMENTO TO CIUDAD;

Cambie en la tabla PROYECTO los campos PRESUPUESTO_PROYECTO a PRESUPUESTO e FECHA_INICIO_PROYECTO a FECHA_INICIO.
ALTER TABLE PROYECTO
RENAME COLUMN PRESUPUESTO_PROYECTO TO PRESUPUESTO;
ALTER TABLE PROYECTO
RENAME COLUMN FECHA_INICIO_PROYECTO TO FECHA_INICIO;

Cambie en la tabla DEPENDIENTE los campos TIPO_DEPENDENCIA para TIPO y EDAD_DEPENDIENTE a EDAD.
ALTER TABLE DEPENDIENTE
RENAME COLUMN TIPO_DEPENDENCIA TO TIPO;
ALTER TABLE DEPENDIENTE
RENAME COLUMN EDAD_DEPENDENCIA TO EDAD;

A単ada una foreign key en la tabla de notas_fiscales que vincule el numero de esta con el identificador de la tabla de productos.
ALTER TABLE NOTAS_FISCALES
ADD CONSTRAINT FK_PRODUCTO
FOREIGN KEY (ID_PRODUCTO)
REFERENCES PRODUCTO (ID_PRODUCTO);

Formatacion de archivo CSV para insertar datos en taablas:
BASE
cod_proyeto	nombre_proyeto	presupuesto_proy	fecha_inicio_pres	cod_departamento
P0001	PROYECTO P0001	20000,00	01/02/2019	D0001
P0002	PROYECTO P0002	22500,00	07/02/2020	D0001
P0003	PROYECTO P0003	41000,00	15/03/2021	D0001
P0004	PROYECTO P0004	70000,00	18/09/2021	D0002
P0005	PROYECTO P0005	35000,00	01/03/2022	D0002
P0006	PROYECTO P0006	70000,00	03/07/2021	D0002
P0007	PROYECTO P0007	65000,00	27/05/2021	D0002
P0008	PROYECTO P0008	25000,00	14/03/2018	D0003
P0009	PROYECTO P0009	12000,00	13/07/2021	D0003
P0010	PROYECTO P0010	21000,00	08/10/2019	D0004
P0011	PROYECTO P0011	39000,00	30/01/2021	D0005

RESULTADO CSV PRE INSERCION EN EL SGBD.
cod_proyeto;nombre_proyeto;presupuesto_proy;fecha_inicio_pres;cod_departamento
P0001;PROYECTO;P0001;20000,00;01/02/2019;D0001
P0002;PROYECTO;P0002;22500,00;07/02/2020;D0001
P0003;PROYECTO;P0003;41000,00;15/03/2021;D0001
P0004;PROYECTO;P0004;70000,00;18/09/2021;D0002
P0005;PROYECTO;P0005;35000,00;01/03/2022;D0002
P0006;PROYECTO;P0006;70000,00;03/07/2021;D0002
P0007;PROYECTO;P0007;65000,00;27/05/2021;D0002
P0008;PROYECTO;P0008;25000,00;14/03/2018;D0003
P0009;PROYECTO;P0009;12000,00;13/07/2021;D0003
P0010;PROYECTO;P0010;21000,00;08/10/2019;D0004
P0011;PROYECTO;P0011;39000,00;30/01/2021;D0005

Para la clase 04 usaremos los tipo test de la misma por falta de ejercicios.
Se ha terminado el a単o y hemos de agregar 1 a単o mas a todos los empleados.  Que comando podriamos usar?

UPDATE EMPLEADOS SET EDAD = EDAD+1;

Si quisieramos cambiar el el precio de un producto con id 90467829 que codigo usariamos?

UPDATE PRODUCTOS SET PRECIO=10,50 
WHERE ID_PRODUCTO = 90467829;

El presupuesto del a単o fue ejecutado y los proyectos tuvieron reajustados sus presupuestos, algunos para mas otros para menos y algunos nada.usando la tabla obtenida cree un comando update para actualizar la tabla de proyectos.

UPDATE PROYECTOS P
SET P.PRESUPUESTO = P.PRESUPUESTO*(1+
(SELECT PP.PORCENTAJE_VARIACION FROM PROYECTO_PRESUPUESTO
WHERE P.COD_PROYECTO = PP.COD_PROYECTO))
WHERE EXISTS (SELECT 1 FROM PROYECTO_PRESUPUESTO PP
WHERE P.COD_PROYECTO = PP.COD_PROYECTO);

Para borrar los productos de la tabla de productos_fuente que no es esten en la tabla de productos que hemos de hacer?
DELETE P FROM PRODUCTOS P
LEFT JOIN PRODUCTOS_FUENTE PF
ON P.CODIGO_PRODUCTOS = PF.CODIGO_PRODUCTOS
WHERE PF.CODIGO_PRODUCTOS IS NULL;

Teniendo en cuenta una tabla nueva de funcionarios_despedidos actualize la tabla de funcionarios borrando tambien los encargados.
DELETE FROM FUNCIONARIOS
WHERE ID_FUNCIONARIO IN(
SELECT F.ID_FUNCIONARIO FROM FUNCIONARIOS F
INNER JOIN FUNCIONARIOS_DESPEDIDOS FD
ON F.ID_FUNCIONARIO =FD.ID_FUNCIONARIO);

DELETE FROM ENCARGADOS 
WHERE ID_FUNCIONARIO IN(
SELECT E.ID_FUNCIONARIO FROM ENCARGADOS E
INNER JOIN FUNCIONARIOS_DESPEDIDOS FD
ON E.ID_FUNCIONARIO = FD.ID_FUNCIONARIO);

EJERCICIO FINAL CURSO
En la tabla ofrecida tenenmos el presupuesto por funcionario de cada departamento.
Queremos crear triggers para que los datos sean guardados en una tabla con los campos DEPARTAMENTO y VALOR, sean siempre actualizados.
--Numero de empleados por departamentos
SELECT D.ID_DEPARTAMENTO ,COUNT(*) AS TOTAL_FUNCIONARIOS
FROM DEPARTAMENTO D
INNER JOIN
FUNCIONARIOS F
ON D.ID_DEPARTAMENTO =F.ID_DEPARTAMENTO
GROUP BY D.ID_DEPARTAMENTO;

--total presupuesto por departamento
SELECT P.ID_DEPARTAMENTO, SUM(P.PRESUPUESTO)AS PRESUPUESTO_DEPARTAMENTO
FROM PROYECTOS P
GROUP BY  P.ID_DEPARTAMENTO;
